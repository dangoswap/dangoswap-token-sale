{
  "address": "0x5C615c47edd415D6d71800D94d3d3F370B2F304c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenInRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensOutPerInNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensOutPerInDenominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenInAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenOutAmount",
          "type": "uint256"
        }
      ],
      "name": "SwapTokens",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokensOutPerInNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensOutPerInDenominator",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenInAmount",
          "type": "uint256"
        }
      ],
      "name": "swapTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokenOutAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenIn",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenInRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenOut",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensOutPerInDenominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensOutPerInNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe63fe6e0a30c0edb2df754400794a84da4f386df93ba060eeb316709abff23f2",
  "receipt": {
    "to": null,
    "from": "0xB70e5298fb3ff28942309218e444F529964cd691",
    "contractAddress": "0x5C615c47edd415D6d71800D94d3d3F370B2F304c",
    "transactionIndex": 0,
    "gasUsed": "817833",
    "logsBloom": "0x
    "blockHash": "0x3e0b9b633f953fc5bd30bf8fe84272476b96600feff5d30af6be04e4327f7782",
    "transactionHash": "0xe63fe6e0a30c0edb2df754400794a84da4f386df93ba060eeb316709abff23f2",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3233059,
        "transactionHash": "0xe63fe6e0a30c0edb2df754400794a84da4f386df93ba060eeb316709abff23f2",
        "address": "0x5C615c47edd415D6d71800D94d3d3F370B2F304c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b70e5298fb3ff28942309218e444f529964cd691"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x3e0b9b633f953fc5bd30bf8fe84272476b96600feff5d30af6be04e4327f7782"
      }
    ],
    "blockNumber": 3233059,
    "cumulativeGasUsed": "817833",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4094Fca1523757eAE0BAEF002A27791F77EdEC0f",
    "0xed1ABbAb02049c4B14336dbf0c3080D626DdaAFB",
    "0xCA1dD1342aA4a8B4542De0e06f03032222032619",
    "0xB70e5298fb3ff28942309218e444F529964cd691",
    12,
    100
  ],
  "numDeployments": 2,
  "solcInputHash": "be68be3b540510403f93f314b811a61e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenInRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensOutPerInNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokensOutPerInDenominator\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenInAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenOutAmount\",\"type\":\"uint256\"}],\"name\":\"SwapTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensOutPerInNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokensOutPerInDenominator\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenInAmount\",\"type\":\"uint256\"}],\"name\":\"swapTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenOutAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIn\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenInRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOut\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensOutPerInDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensOutPerInNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenVendor.sol\":\"TokenVendor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/TokenVendor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract TokenVendor is Ownable {    \\n\\n    // token price for ETH\\n    uint256 public tokensOutPerInNumerator;\\n    uint256 public tokensOutPerInDenominator;\\n    ERC20 public immutable tokenIn;\\n    ERC20 public immutable tokenOut;\\n    ERC20 public immutable weth;\\n    address public tokenInRecipient;\\n\\n    event SwapTokens(        \\n        address indexed _to,\\n        uint256 _tokenInAmount,\\n        uint256 _tokenOutAmount\\n    );\\n\\n    constructor(\\n        ERC20 _weth,\\n        ERC20 _tokenIn,\\n        ERC20 _tokenOut,\\n        address _tokenInRecipient,\\n        uint256 _tokensOutPerInNumerator,\\n        uint256 _tokensOutPerInDenominator\\n    ) {\\n        require(address(_weth) != address(0));\\n        require(address(_tokenIn) != address(0));\\n        require(address(_tokenOut) != address(0));\\n        require(_tokenInRecipient != address(0));\\n        weth = _weth;\\n        tokenIn = _tokenIn;\\n        tokenOut = _tokenOut;        \\n        tokenInRecipient = _tokenInRecipient;\\n        setPrice(_tokensOutPerInNumerator, _tokensOutPerInDenominator);\\n    }\\n\\n    function setPrice(\\n        uint256 _tokensOutPerInNumerator,\\n        uint256 _tokensOutPerInDenominator\\n    ) public onlyOwner {\\n        require(\\n            _tokensOutPerInNumerator > 0,\\n            \\\"_tokensOutPerInNumerator must be positive\\\"\\n        );\\n        require(\\n            _tokensOutPerInDenominator > 0,\\n            \\\"_tokensOutPerInDenominator must be positive\\\"\\n        );\\n        tokensOutPerInNumerator = _tokensOutPerInNumerator;\\n        tokensOutPerInDenominator = _tokensOutPerInDenominator;\\n    }\\n\\n    function swapTokens(\\n        uint256 _tokenInAmount\\n    ) public returns (uint256 _tokenOutAmount) {\\n        address to = msg.sender;\\n        address from = msg.sender;\\n\\n        uint256 amountToBuy = _tokenInAmount * tokensOutPerInNumerator / tokensOutPerInDenominator;\\n\\n        // check if the Vendor Contract has enough amount of tokens for the transaction\\n        uint256 vendorBalance = tokenOut.balanceOf(address(this));\\n        require(\\n            vendorBalance >= amountToBuy,\\n            \\\"There is not enough tokens to swap out\\\"\\n        );\\n\\n        bool received = tokenIn.transferFrom(\\n            from,\\n            tokenInRecipient,\\n            _tokenInAmount\\n        );\\n        require(received, \\\"Failed to receive token from user\\\");\\n\\n        // Transfer token to the msg.sender\\n        bool sent = tokenOut.transfer(to, amountToBuy);\\n        require(sent, \\\"Failed to transfer token to user\\\");\\n\\n        // emit the event\\n        emit SwapTokens(to, _tokenInAmount, amountToBuy);\\n\\n        return amountToBuy;\\n    }\\n\\n    function withdrawToken(address _tokenRecipient, uint256 _amount) public onlyOwner {\\n        require(_amount > 0);\\n        require(_tokenRecipient != address(0));\\n        bool sent = tokenOut.transfer(_tokenRecipient, _amount);\\n        require(sent, \\\"Failed to transfer token to recipient\\\");        \\n        emit SwapTokens(_tokenRecipient, 0, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xe777c5c2ae98e10a3089b315b13887f5a8f1ca74aa38deeea537dfbb777f5225\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162000f6138038062000f61833981016040819052620000349162000276565b6200003f33620000d8565b6001600160a01b0386166200005357600080fd5b6001600160a01b0385166200006757600080fd5b6001600160a01b0384166200007b57600080fd5b6001600160a01b0383166200008f57600080fd5b6001600160a01b0386811660c05285811660805284811660a052600380546001600160a01b031916918516919091179055620000cc828262000128565b505050505050620002f2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60008211620001ec5760405162461bcd60e51b815260206004820152602960248201527f5f746f6b656e734f7574506572496e4e756d657261746f72206d75737420626560448201526820706f73697469766560b81b60648201526084016200017f565b60008111620002525760405162461bcd60e51b815260206004820152602b60248201527f5f746f6b656e734f7574506572496e44656e6f6d696e61746f72206d7573742060448201526a626520706f73697469766560a81b60648201526084016200017f565b600191909155600255565b6001600160a01b03811681146200027357600080fd5b50565b60008060008060008060c087890312156200029057600080fd5b86516200029d816200025d565b6020880151909650620002b0816200025d565b6040880151909550620002c3816200025d565b6060880151909450620002d6816200025d565b809350506080870151915060a087015190509295509295509295565b60805160a05160c051610c236200033e600039600061010e0152600081816101a101528181610313015281816106e2015261093b01526000818161013501526108210152610c236000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063ab65bdd711610081578063f2fde38b1161005b578063f2fde38b146101cc578063f7d97577146101df578063fe784eaa146101f257600080fd5b8063ab65bdd714610185578063d0202d3b1461019c578063e8efeaa6146101c357600080fd5b8063715018a6116100b2578063715018a6146101575780638da5cb5b146101615780639e281a981461017257600080fd5b806334bbe835146100d95780633fc8cef3146101095780636daf390b14610130575b600080fd5b6003546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b61015f610205565b005b6000546001600160a01b03166100ec565b61015f610180366004610adc565b610270565b61018e60025481565b604051908152602001610100565b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b61018e60015481565b61015f6101da366004610b06565b610450565b61015f6101ed366004610b28565b610532565b61018e610200366004610b4a565b610683565b6000546001600160a01b031633146102645760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61026e6000610a58565b565b6000546001600160a01b031633146102ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b600081116102d757600080fd5b6001600160a01b0382166102ea57600080fd5b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb90604401602060405180830381600087803b15801561035957600080fd5b505af115801561036d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103919190610b63565b9050806104065760405162461bcd60e51b815260206004820152602560248201527f4661696c656420746f207472616e7366657220746f6b656e20746f207265636960448201527f7069656e74000000000000000000000000000000000000000000000000000000606482015260840161025b565b6040805160008152602081018490526001600160a01b038516917f8c2d42ad364c622e66bf9cff618e1c5d8da64a273733c85be383b6e429ffa4a3910160405180910390a2505050565b6000546001600160a01b031633146104aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b6001600160a01b0381166105265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161025b565b61052f81610a58565b50565b6000546001600160a01b0316331461058c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b600082116106025760405162461bcd60e51b815260206004820152602960248201527f5f746f6b656e734f7574506572496e4e756d657261746f72206d75737420626560448201527f20706f7369746976650000000000000000000000000000000000000000000000606482015260840161025b565b600081116106785760405162461bcd60e51b815260206004820152602b60248201527f5f746f6b656e734f7574506572496e44656e6f6d696e61746f72206d7573742060448201527f626520706f736974697665000000000000000000000000000000000000000000606482015260840161025b565b600191909155600255565b60025460015460009133918291849161069c9087610b85565b6106a69190610bb2565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561072457600080fd5b505afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190610bd4565b9050818110156107d45760405162461bcd60e51b815260206004820152602660248201527f5468657265206973206e6f7420656e6f75676820746f6b656e7320746f20737760448201527f6170206f75740000000000000000000000000000000000000000000000000000606482015260840161025b565b6003546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301529182166024820152604481018890526000917f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b15801561086557600080fd5b505af1158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190610b63565b9050806109125760405162461bcd60e51b815260206004820152602160248201527f4661696c656420746f207265636569766520746f6b656e2066726f6d2075736560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015260840161025b565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018590526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb90604401602060405180830381600087803b15801561098157600080fd5b505af1158015610995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b99190610b63565b905080610a085760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f207472616e7366657220746f6b656e20746f2075736572604482015260640161025b565b60408051898152602081018690526001600160a01b038816917f8c2d42ad364c622e66bf9cff618e1c5d8da64a273733c85be383b6e429ffa4a3910160405180910390a250919695505050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610ad757600080fd5b919050565b60008060408385031215610aef57600080fd5b610af883610ac0565b946020939093013593505050565b600060208284031215610b1857600080fd5b610b2182610ac0565b9392505050565b60008060408385031215610b3b57600080fd5b50508035926020909101359150565b600060208284031215610b5c57600080fd5b5035919050565b600060208284031215610b7557600080fd5b81518015158114610b2157600080fd5b6000816000190483118215151615610bad57634e487b7160e01b600052601160045260246000fd5b500290565b600082610bcf57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610be657600080fd5b505191905056fea2646970667358221220e70e65fcc05275f63eb1792eadd71846dceae48e054891da7bf1b69007e2cf5164736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c8063ab65bdd711610081578063f2fde38b1161005b578063f2fde38b146101cc578063f7d97577146101df578063fe784eaa146101f257600080fd5b8063ab65bdd714610185578063d0202d3b1461019c578063e8efeaa6146101c357600080fd5b8063715018a6116100b2578063715018a6146101575780638da5cb5b146101615780639e281a981461017257600080fd5b806334bbe835146100d95780633fc8cef3146101095780636daf390b14610130575b600080fd5b6003546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b61015f610205565b005b6000546001600160a01b03166100ec565b61015f610180366004610adc565b610270565b61018e60025481565b604051908152602001610100565b6100ec7f000000000000000000000000000000000000000000000000000000000000000081565b61018e60015481565b61015f6101da366004610b06565b610450565b61015f6101ed366004610b28565b610532565b61018e610200366004610b4a565b610683565b6000546001600160a01b031633146102645760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61026e6000610a58565b565b6000546001600160a01b031633146102ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b600081116102d757600080fd5b6001600160a01b0382166102ea57600080fd5b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb90604401602060405180830381600087803b15801561035957600080fd5b505af115801561036d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103919190610b63565b9050806104065760405162461bcd60e51b815260206004820152602560248201527f4661696c656420746f207472616e7366657220746f6b656e20746f207265636960448201527f7069656e74000000000000000000000000000000000000000000000000000000606482015260840161025b565b6040805160008152602081018490526001600160a01b038516917f8c2d42ad364c622e66bf9cff618e1c5d8da64a273733c85be383b6e429ffa4a3910160405180910390a2505050565b6000546001600160a01b031633146104aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b6001600160a01b0381166105265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161025b565b61052f81610a58565b50565b6000546001600160a01b0316331461058c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025b565b600082116106025760405162461bcd60e51b815260206004820152602960248201527f5f746f6b656e734f7574506572496e4e756d657261746f72206d75737420626560448201527f20706f7369746976650000000000000000000000000000000000000000000000606482015260840161025b565b600081116106785760405162461bcd60e51b815260206004820152602b60248201527f5f746f6b656e734f7574506572496e44656e6f6d696e61746f72206d7573742060448201527f626520706f736974697665000000000000000000000000000000000000000000606482015260840161025b565b600191909155600255565b60025460015460009133918291849161069c9087610b85565b6106a69190610bb2565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561072457600080fd5b505afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190610bd4565b9050818110156107d45760405162461bcd60e51b815260206004820152602660248201527f5468657265206973206e6f7420656e6f75676820746f6b656e7320746f20737760448201527f6170206f75740000000000000000000000000000000000000000000000000000606482015260840161025b565b6003546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301529182166024820152604481018890526000917f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b15801561086557600080fd5b505af1158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190610b63565b9050806109125760405162461bcd60e51b815260206004820152602160248201527f4661696c656420746f207265636569766520746f6b656e2066726f6d2075736560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015260840161025b565b60405163a9059cbb60e01b81526001600160a01b038681166004830152602482018590526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb90604401602060405180830381600087803b15801561098157600080fd5b505af1158015610995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b99190610b63565b905080610a085760405162461bcd60e51b815260206004820181905260248201527f4661696c656420746f207472616e7366657220746f6b656e20746f2075736572604482015260640161025b565b60408051898152602081018690526001600160a01b038816917f8c2d42ad364c622e66bf9cff618e1c5d8da64a273733c85be383b6e429ffa4a3910160405180910390a250919695505050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610ad757600080fd5b919050565b60008060408385031215610aef57600080fd5b610af883610ac0565b946020939093013593505050565b600060208284031215610b1857600080fd5b610b2182610ac0565b9392505050565b60008060408385031215610b3b57600080fd5b50508035926020909101359150565b600060208284031215610b5c57600080fd5b5035919050565b600060208284031215610b7557600080fd5b81518015158114610b2157600080fd5b6000816000190483118215151615610bad57634e487b7160e01b600052601160045260246000fd5b500290565b600082610bcf57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610be657600080fd5b505191905056fea2646970667358221220e70e65fcc05275f63eb1792eadd71846dceae48e054891da7bf1b69007e2cf5164736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/TokenVendor.sol:TokenVendor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 783,
        "contract": "contracts/TokenVendor.sol:TokenVendor",
        "label": "tokensOutPerInNumerator",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 785,
        "contract": "contracts/TokenVendor.sol:TokenVendor",
        "label": "tokensOutPerInDenominator",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 796,
        "contract": "contracts/TokenVendor.sol:TokenVendor",
        "label": "tokenInRecipient",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}